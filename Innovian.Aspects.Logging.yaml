name: $(date:yyyy.MM.dd)$(rev:.r)

resources:
  pipelines:
    - pipeline: AspectPipeline
      source: Innovian.Aspects.Logging.Fabric
      trigger: true
variables:
  - name: Version
    value: $(resources.pipeline.AspectPipeline.variables.Version)
stages:
- stage: Build
  jobs:
  - job:
    workspace:
      clean: all
    pool: 
      name: AzureBuildServers
      demands: Agent.OS -equals Windows_NT
    variables:
    - name: BuildNumber
      value: $(Build.BuildNumber)
    - name: ProjectName
      value: Innovian.Aspects.Logging
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: '**/$(ProjectName).csproj'
        noCache: true

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: '**/$(ProjectName).csproj'
        arguments: '--no-restore'

    # Aspect testing
    - task: dotnetcorecli@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        projects: '**/$(ProjectName).Testing.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: 'pack'
        packagesToPack: '**/$(ProjectName).csproj'
        versioningScheme: 'byEnvVar'
        versionEnvVar: 'BuildNumber'
- stage: Deployment
  dependsOn: Build
  jobs:
  - deployment: NugetDeployment
    displayName: "Deploying to NuGet"
    environment: "Public NuGet"
    pool: 
      name: AzureBuildServers
      demands: Agent.OS -equals Windows_NT
  - job:
    steps:
    - task: NuGetCommand@2
      displayName: 'Push to NuGet.org'
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'InnovianNuget'
